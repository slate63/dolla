name: Docker Image CI

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**' # Matches any branch starting with 'feature/'
    tags:
      - 'v*.*.*' # Matches tags like v1.0.0, v2.1.5, etc.

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Needed for ghcr.io, but good practice for any registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set Docker Repository Name
        id: set_docker_repo
        run: |
          # github.repository gives "owner/repo-name" (e.g., "myusername/my-app-repo")
          REPO_NAME=$(echo "${{ github.repository }}" | cut -d'/' -f2)

          # Use github.repository_owner (your GitHub username/organization) + repo name
          DOCKER_FULL_REPO="${{ github.repository_owner }}/${REPO_NAME}"

          echo "Determined Docker Repository: $DOCKER_FULL_REPO"
          echo "::set-output name=repo::$DOCKER_FULL_REPO"
        shell: bash

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_TOKEN }} # Using DOCKER_TOKEN for authentication

      - name: Determine image tag
        id: get_tag
        run: |
          BRANCH_NAME=$(echo "${{ github.ref }}" | sed -e "s/refs\/heads\///g")
          TAG=""

          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # If it's a tag push (e.g., v1.0.0), use the tag name directly
            TAG="${{ github.ref_name }}"
          elif [[ "$BRANCH_NAME" == "main" ]]; then
            # For 'main' branch, use 'latest' and also a short SHA
            TAG="latest"
            SHORT_SHA=$(git rev-parse --short HEAD)
            echo "::set-output name=extra_tag::${SHORT_SHA}"
          elif [[ "$BRANCH_NAME" == "develop" ]]; then
            # For 'develop' branch, use 'develop'
            TAG="develop"
          elif [[ "$BRANCH_NAME" == feature/* ]]; then
            # For feature branches, use a sanitized branch name
            TAG=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g' | cut -c1-60 | tr A-Z a-z) # Sanitize and truncate
          else
            # Fallback for other branches (e.g., use a sanitized branch name and short SHA)
            TAG=$(echo "$BRANCH_NAME" | sed 's/[^a-zA-Z0-9._-]/-/g' | cut -c1-60 | tr A-Z a-z)-$(git rev-parse --short HEAD)
          fi

          echo "Determined TAG: $TAG"
          echo "::set-output name=tag::$TAG"
        shell: bash

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: . # Or the path to your Dockerfile context
          push: true
          tags: |
            ${{ steps.set_docker_repo.outputs.repo }}:${{ steps.get_tag.outputs.tag }}
            # Add the extra tag if it was set (e.g., for 'main' branch)
            ${{ steps.get_tag.outputs.extra_tag && format('{0}:{1}', steps.set_docker_repo.outputs.repo, steps.get_tag.outputs.extra_tag) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
